name: $(rev:r)
trigger:
  branches:
    include:
    - main

stages:
  - stage: Test
    jobs:
      - job: Test_Infrastructure
        displayName: 'Test Infrastructure'
        pool:
          vmImage: vs2017-win2016
        steps:
          - task: AzurePowerShell@5
            name: Enable_Azure_Resource_Providers
            displayName: 'Enable Azure Resource Providers'
            inputs:
              azureSubscription: 'Azure Test Connection'
              pwsh: true
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                Import-Module -Name '.\src\infrastructure\azuredeploy.utilities\'

                Register-AzureResourceProviderAndFeature -Verbose

          - task: AzurePowerShell@5
            name: Create_Cluster_Admin_Group
            displayName: 'Create Cluster Admin Group'
            inputs:
              azureSubscription: 'Azure Test Connection'
              pwsh: true
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                Import-Module -Name '.\src\infrastructure\azuredeploy.utilities\'

                $clusterAdminGroupObjectId = New-ClusterAdminAadGroup -ResourceName $(ResourceName) -Verbose

                echo "##vso[task.setvariable variable=clusterAdminGroupObjectId;isOutput=true]$clusterAdminGroupObjectId" -Verbose

          - task: AzureResourceManagerTemplateDeployment@3
            name: Deploy_Cluster_Resources
            displayName: 'Deploy Cluster Resources'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Azure Test Connection'
              subscriptionId: $(SubscriptionId)
              action: 'Create Or Update Resource Group'
              resourceGroupName: $(ResourceGroupName)
              templateLocation: 'Linked artifact'
              csmFile: 'src\infrastructure\azuredeploy.json'
              deploymentMode: 'Incremental'
              location: $(Location)
              overrideParameters: -name "$(ResourceName)" -clusterAdminGroupObjectIds [ "$(Create_Cluster_Admin_Group.clusterAdminGroupObjectId)" ]

          - task: AzurePowerShell@5
            name: Delete_Resource_Group
            displayName: 'Delete Resource Group'
            condition: always()
            inputs:
              azureSubscription: 'Azure Test Connection'
              pwsh: true
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                Write-Verbose -Message 'Deleting resource group $(ResourceGroupName)' -Verbose

                Remove-AzResourceGroup -ResourceGroupName $(ResourceGroupName) -Force
