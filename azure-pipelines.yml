name: $(rev:r)
trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - src/*
  tags:
    include:
    - "v*"
    exclude:
    - "*-*"

stages:
  - stage: Test
    jobs:
      - job: Test_Infrastructure
        displayName: 'Test Infrastructure'
        pool:
          vmImage: vs2017-win2016
        steps:
          - task: AzurePowerShell@5
            name: Enable_Azure_Resource_Providers
            displayName: 'Enable Azure Resource Providers'
            inputs:
              azureSubscription: 'Azure Test Connection'
              pwsh: true
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                $VerbosePreference = 'Continue'

                Write-Verbose -Message 'Registering Microsoft.ContainerService Provider'

                Register-AzResourceProvider `
                    -ProviderNamespace 'Microsoft.ContainerService'

                Write-Verbose -Message 'Registering Microsoft.ContainerService\AAD-V2 Feature'

                Register-AzProviderFeature `
                    -Feature 'AAD-V2' `
                    -ProviderNamespace 'Microsoft.ContainerService'

          - task: AzurePowerShell@5
            name: Create_Cluster_Admin_Group
            displayName: 'Create Cluster Admin Group'
            inputs:
              azureSubscription: 'Azure Test Connection'
              pwsh: true
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                $VerbosePreference = 'Continue'

                $clusterAdminName = "${ResourceName}ClusterAdmin"

                Write-Verbose -Message "Looking up '$clusterAdminName' AAD Group"

                $clusterAdminGroup = Get-AzADGroup -DisplayName $clusterAdminName

                if ($null -eq $clusterAdminName) {
                  Write-Verbose -Message "Creating '$clusterAdminName' AAD Group"

                  $clusterAdminGroupObjectIds = (New-AzADGroup `
                    -DisplayName $clusterAdminName `
                    -MailNickname $clusterAdminName).Id
                } else {
                    $clusterAdminGroupObjectIds = @($clusterAdminGroup[0].Id)
                }

                Write-Verbose -Message "AAD Group '$clusterAdminName' has Object Id '$($clusterAdminGroupObjectIds -join ',')'"

                echo "##vso[task.setvariable variable=clusterAdminGroupObjectIds;isOutput=true]$clusterAdminGroupObjectIds"

          - task: AzureResourceManagerTemplateDeployment@3
            name: Deploy_Azure_Resource_Manager_Template
            displayName: 'Deploy Azure Resource Manager Template'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Azure Test Connection'
              subscriptionId: 'c7f8ca1e-46f6-4a59-a039-15eaefd2337e'
              action: 'Create Or Update Resource Group'
              resourceGroupName: $(ResourceGroupName)
              templateLocation: 'Linked artifact'
              csmFile: 'src\infrastructure\azuredeploy.json'
              deploymentMode: 'Incremental'