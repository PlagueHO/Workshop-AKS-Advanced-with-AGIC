name: $(rev:r)
trigger:
  branches:
    include:
    - main

stages:
  - stage: Test
    jobs:
      - job: Prepare_Azure_Subscription
        displayName: 'Prepare Azure Subscription'
        pool:
          vmImage: vs2017-win2016
        steps:
          - task: AzurePowerShell@5
            name: Enable_Azure_Resource_Providers
            displayName: 'Enable Azure Resource Providers'
            inputs:
              azureSubscription: 'Azure Test Connection'
              pwsh: true
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                Import-Module -Name '.\src\infrastructure\azuredeploy.utilities\'

                Register-AzureResourceProviderAndFeature -Verbose

          - task: AzurePowerShell@5
            name: Create_Cluster_Admin_Group
            displayName: 'Create Cluster Admin Group'
            inputs:
              azureSubscription: 'Azure Test Connection'
              pwsh: true
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                Import-Module -Name '.\src\infrastructure\azuredeploy.utilities\'

                $clusterAdminGroupObjectId = New-ClusterAdminAadGroup -ResourceName $(BaseResourceName) -Verbose

                Write-Host -Object "##vso[task.setvariable variable=clusterAdminGroupObjectId;isOutput=true]$clusterAdminGroupObjectId"

      - job: Test_Infrastructure_ARM
        displayName: 'Test Infrastructure with ARM'
        dependsOn: ['Prepare_Azure_Subscription']
        pool:
          vmImage: vs2017-win2016
        variables:
          ResourceGroupName: '$(BaseResourceName)-arm-rg'
          ResourceName: '$(BaseResourceName)arm'
          ClusterAdminGroupObjectIds: $[ dependencies.Prepare_Azure_Subscription.outputs['Create_Cluster_Admin_Group.clusterAdminGroupObjectId'] ]
          TemplateFile: './src/infrastructure/azuredeploy.json'
        steps:
          - task: AzurePowerShell@5
            name: Deploy_Cluster_ARM
            displayName: 'Deploy Cluster with ARM'
            inputs:
              azureSubscription: 'Azure Test Connection'
              pwsh: true
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                Import-Module -Name '.\src\infrastructure\azuredeploy.utilities\'

                Deploy-AzureResourceGroupAndInfrastructure `
                    -ResourceGroupName $(ResourceGroupName) `
                    -ResourceName $(ResourceName) `
                    -Location $(Location) `
                    -ClusterAdminGroupObjectId $(ClusterAdminGroupObjectIds) `
                    -TemplateFile $(TemplateFile)

          - task: AzurePowerShell@5
            name: Delete_Resource_Group_AR
            displayName: 'Delete Resource Group ARM'
            condition: succeeded()
            inputs:
              azureSubscription: 'Azure Test Connection'
              pwsh: true
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                Write-Verbose -Message 'Deleting resource group $(ResourceGroupName)' -Verbose

                Remove-AzResourceGroup -ResourceGroupName $(ResourceGroupName) -Force

      - job: Test_Infrastructure_Bicep
        displayName: 'Test Infrastructure with Bicep'
        dependsOn: ['Prepare_Azure_Subscription']
        pool:
          vmImage: vs2017-win2016
        variables:
          ResourceGroupName: '$(BaseResourceName)-bcp-rg'
          ResourceName: '$(BaseResourceName)bcp'
          ClusterAdminGroupObjectIds: $[ dependencies.Prepare_Azure_Subscription.outputs['Create_Cluster_Admin_Group.clusterAdminGroupObjectId'] ]
          TemplateFile: './src/infrastructure/main.bicep'
        steps:
          - task: AzurePowerShell@5
            name: Deploy_Cluster_Bicep
            displayName: 'Deploy Cluster with Bicep'
            inputs:
              azureSubscription: 'Azure Test Connection'
              pwsh: true
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                Import-Module -Name '.\src\infrastructure\azuredeploy.utilities\'

                Deploy-AzureResourceGroupAndInfrastructure `
                    -ResourceGroupName $(ResourceGroupName) `
                    -ResourceName $(ResourceName) `
                    -Location $(Location) `
                    -ClusterAdminGroupObjectId $(ClusterAdminGroupObjectIds) `
                    -TemplateFile $(TemplateFile)

          - task: AzurePowerShell@5
            name: Delete_Resource_Group_Bicep
            displayName: 'Delete Resource Group Bicep'
            condition: succeeded()
            inputs:
              azureSubscription: 'Azure Test Connection'
              pwsh: true
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                Write-Verbose -Message 'Deleting resource group $(ResourceGroupName)' -Verbose

                Remove-AzResourceGroup -ResourceGroupName $(ResourceGroupName) -Force
